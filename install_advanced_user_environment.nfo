						╔──────────────────────────────────────────────────────────────────╗						
						│░░░░░▀█▀░█▀█░▀█▀░█▀█░█░░░░░█▀▀░█▀█░█▄█░█▄█░█▀█░█▀█░█▀▄░█▀▀░█▀▄░░░░│						
						│░░░░░░█░░█░█░░█░░█▀█░█░░░░░█░░░█░█░█░█░█░█░█▀█░█░█░█░█░█▀▀░█▀▄░░░░│						
						│░░░░░░▀░░▀▀▀░░▀░░▀░▀░▀▀▀░░░▀▀▀░▀▀▀░▀░▀░▀░▀░▀░▀░▀░▀░▀▀░░▀▀▀░▀░▀░░░░│						
						│░░░░░░░░░░░░░░░░░░░▀█▀░▀█▀░▀█▀░█▀█░█▀█                            │						
						│░░░░░░░░░░░░░░░░░░░░█░░░█░░░█░░█▀█░█░█                            │						
						│░░░░░░░░░░░░░░░░░░░░▀░░▀▀▀░░▀░░▀░▀░▀░▀                            │						
						╚──────────────────────────────────────────────────────────────────╝						
 	▶◀▼▲◤◥◣◢•●◉«»➤🡆🡹🡸🡺🡹🡻🡼🡽🡾🡿◆❖✦★✪✠✿✱✚†‡▬▔■▪▣◩◪◧◨∎▮░▒▓▌█▐【】§∑$€¥™©℗☎✔☑✘💯⚡☂❤卍🎵📣🎹🎸🎧🎤🔐🔑📌📍📦🎁
	
	Данный скрипт предназначен для автоматической установки или обновления расширенного пакета програм и библиотек
	глобального пользовательского окружения, что бы при смене учётной записи не перенастраивать среду:
	
	WinGet, Scoop - пакетные менеджеры
	PowerShell Core - https://github.com/PowerShell/PowerShell 
	Microsoft Edge WebView2 Runtime
	Microsoft Visual C++ 2005/2008/2010/2012/2013/2015+ Redistributable
	# Microsoft Visual Studio C++ x64/x86 Build Tools - https://visualstudio.microsoft.com/ru/downloads/#build-tools-for-visual-studio-2022
	Microsoft .NET Desktop 3.1/5/6/7/8/Preview
	Microsoft .NET Framework 2/3/4.5/4@latest
	# Microsoft ASP.NET Core 2/3/5/6/7/8/Preview
	# DirectX Web Installer
	Java Runtime Environment
	Git - https://gitforwindows.org
	WinFsp - https://winfsp.dev
	Clink - https://chrisant996.github.io/clink
	NodeJS - https://nodejs.org
	Python - https://python.org
	PHP - https://windows.php.net
	MinGW - https://winlibs.com
	WinFetch - https://github.com/lptstr/winfetch
	Zoxide - https://github.com/ajeetdsouza/zoxide
	micro - https://micro-editor.github.io
	Pragtical - https://pragtical.dev для быстрого редактирования конфигов, language source файлов
	oh-my-posh - https://ohmyposh.dev быстрый движок тем для любой оболочки PowerShell
	wget, curl - web network утилиты
	PowerShell scripts, modules - улучшают и расширяют функциональность PowerShell
	
	☑ Запуск скрипта можно осуществить различными способами:

	Самостоятельно определит профили PowerShell, PowerShell Core из переменных окружения:
	▶ powershell -File install_advanced_user_environment.ps1 [-arg1 -arg2 ...]
	▶ pwsh -File install_advanced_user_environment.ps1 [-arg1 -arg2 ...]
	
	С параметрами:
	▶ powershell -File install_advanced_user_environment.ps1 -Theme Theme -Fonts Font1,Font2,...
	
	▶ powershell -File install_advanced_user_environment.ps1 -Scripts Script1,Script2,...
													   -ModulesNoImport Module3,Module4,...
													   -Modules Module1,Module2,... 
	
	-Theme - название темы https://ohmyposh.dev/docs/themes
	-Fonts - имена семейства шрифтов Nerd Fonts. https://ohmyposh.dev/docs/installation/fonts
	-Scripts - имена скриптов. https://powershellgallery.com
	-ModulesNoImport - установить модули, не добавлять импорты в профиль. https://powershellgallery.com
	-Modules - установить модули, добавить импорты в профиль. https://powershellgallery.com
	-ResourceOnlyCore - выбрать имена скриптов, модулей только для PowerShell Core

	С указанием конкретного профиля:
	▶ powershell -File install_advanced_user_environment.ps1 -ProfilePath "$PROFILE" -Shell "powershell"
	
	-ProfilePath - полный путь к конкретному профилю и работать только с ним
	-Shell - применяется, если указан -ProfilePath, по умолчанию тип профиля PowerShell Core,
	         для профиля PowerShell нужно указать значение параметра "powershell"
	
	Скрипт исполняется без административных прав, самостоятельно запросит права и запустить powershell
	с опцией -NoProfile, что бы не загружать модули прописанные в профиле.
	Или запустить под администраивными правами без профиля:
	▶ powershell -NoProfile -File install_advanced_user_environment.ps1 [-arg1 -arg2 ...]
	▶ pwsh -NoProfile -File install_advanced_user_environment.ps1 [-arg1 -arg2 ...]

	Что бы не указывать параметры их можно переопределить в разделе ##### Init #####.
	Скрипт поддерживает установку, обновление, удаление скриптов, модулей.
	Добавление в профиль multiline конфигурационных строк. 
	Назначить модули/скрипты для установки только для PowerShell Core.

	☑ psedit - терминальный редактор ps скриптов, c intellisense и подсветкой синтаксиса.
	
	[F5] - выполнить скрипт
	[Ctrl] + [Shift] + [F5] - выполнить скрипт вне редактора
	[F8] - выполнить, выделенные строки
	[Ctrl] + [Shift] + [R] - форматировать текст
	[Ctrl] + [Q] - exit	

	☑ Pragtical Editor
	
	Через scoop создан «p» shim link на Pragtical, запуск из терминала:
	▶ p - откроет редактор с файлами из прошлой сесии
	▶ p FileName - откроет существующий файл или создаст новую вкладку
	▶ powershellconf - редактировать профиль AllUsersAllHosts PowerShell
	▶ pwshconf - редактировать профиль AllUsersAllHosts PowerShell Core
	
	▼ Горячии клавиши ▼
	https://pragtical.dev/docs/user-guide/keymap
	
	[ctrl] + [shift] + [P] - поиск команды
	 [alt] + [P] - переключаться между открытыми вкладками
	[ctrl] + [shift] + [T] - открыть последнюю закрытыю вкладку
	[ctrl] + [.] - открыть console
	[ctrl] + [shift] + [.] - запустить команду в console
	 [alt] + [T] - открыть terminal 
	 [alt] + [🡸] - вернуться к предыдущей позиции 
	 [alt] + [🡺] - вернуться последней позиции
	[ctrl] + [enter] - открыть url ссылку в браузере
	[ctrl] + [/] - комменитровать строку
	[ctrl] + [shift] + [/] - комменитровать блок
 